Portal Todo:

25  separate app / client / controllers parts into projects. Host pure angular
	fix exception in new server form
	fix identity problem in unit tests
	
58  web api with pagination / curies

	use some material. For login form, replace expander?,..
	
	back end L1 tests 

15.11 refactor new-simulation with promises (exercise in rx)
	
60  move data to postgres (or MS?)
    deploy in docker
50  OWIN / Katana / Kestrel / Selfhost 
    host on AWS

	front end unit tests
	front end e2e tests (selenium?)

16  home page
110 how I can use html <map>

	use https to encrypt password

57  rename servers into server config, introduce runnable instance of server as separate portal entity
57.1 allow to click play / stop (servers/server) for own server and put (or use SignalR)

70  mobile adaptive ui for server list
100 post css for webpack

learning deeper:
    finalize error handling: by some reason, http error is report somewhere (in hal?) and it's too late to survive
	inject Navigation Service with APP_INITIALIZER, learn how to use it and avoid circular dependencies

Done:
    redo PR to hal-4-angular in original author (masvis) repo
	migrate ng7
30  rename to Portal
20  clean unneeded asp and npm references
 	try to use fetched resource when navigating from 'list' to 'details' and rely on dynamic relation loading
    explicit diference for resource.Embed and resourceCollection.Embed extensions
2   configure new server and post
14  gitignore per solution
15  reusable code for ts for hal
15.1 disable post server if no simulation selected
15.1 dynamic embedding of linked resource based on ?fields  
15.2 PR to PartialResponse to expose public parsing of ?fields - not needed anymore, only one method used and it's copy pasted
15.2 create new server dynamic loading of related sims and pres for selected simulation
15.25 try to merge getters and queries for model
15.3 PR to hal-4-angular to extend get(id) with options
15.4 PR to hal-4-angular to instantiate all resources in relations tree (_embedded ref. in simulation) - done by repo owner, supported
	PR to WebApi.hal for empty collections
20.1 improve POST, take a look into hal-angular POST (set props instead of links)
20.2 use fields? in POST, pass request builder to creation form - not needed
18  figure out why server is null after created on form
27  fix slow opening of server/id page => Replaced hrefs with router link to prevent whole page reload 
55  regulate _embedded data for pure HAL without ?fields
52  why servers are not loaded from first attempt (fixed by Webhal.Api owners)
57  remove mixing of API and Front end hrefs in templates (don't use link from API to redirect)
    figure out why embedded resource arrays are not replaced by _links in POST. That's ok for now, no more time for HAL
	authentication / identity / angular intercept
	
Platform Todo:
18  think about API point plugin entry

Done: